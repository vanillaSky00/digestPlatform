spring:
  application:
    name: digest

  datasource:
    url: jdbc:postgresql://localhost:5432/digest
    username: digest
    password: digest
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 20000

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        jdbc:
          batch_size: 50
        order_updates: true
        format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
  config:
    import: "optional:configtree:/run/secrets/"

# external API settings
source:
  hn:
    base-url: https://hacker-news.firebaseio.com/v0

  guardian:
    base-url: https://content.guardianapis.com
    api-key : ${GUARDIAN_API_KEY}

  scheduled:
    cron: "0 30 14 * * ?"
    zone: "Asia/Taipei"
    batch-size: 50

  newsapi: {}

# (optional) Feign timeouts/logging
feign:
  client:
    config:
      default:
        connectTimeout: 4000
        readTimeout: 5000
        loggerLevel: BASIC

#With configtree, the files themselves become properties:
#
#  /run/secrets/guardian.api-key → guardian.api-key
#
#  /run/secrets/newsapi.api-key → news.api-key

line.bot:
  channel-token: ${LINE_CHANNEL_TOKEN}
  channel-secret: ${LINE_CHANNEL_SECRET}
  handler:
    path: /callback
    #The starter binds /callback for you; you don’t need a manual @PostMapping. This is exactly how the official sample is set up.